:root {
    --boxColor: #0ff7;
    --rotateSpeed: 10s;
    --bounceSpeed: 1.5s;
}

.frame {
    background: #000;
    min-height: 650px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 75px;
    perspective: 20em;
    perspective-origin: 50% calc(50% - 4em);
}

.scene {
    position: relative;
    transform-style: preserve-3d;
    transition: .5s ease-out;

    //---------- this CSS animation is disabled 
    //---------- to be realized by JS
    // animation: sceneRotate var(--rotateSpeed) infinite linear;

    // @keyframes sceneRotate {
    //     to { transform: rotateY(360deg); }
    // }
}

.ball {
    width: 1em;
    height: 1em;
    border-radius: 50%;
    position: absolute;
    left: -.5em;
    bottom: 1em;
    transition: .5s ease-out;
    background-image: radial-gradient(
        circle at 0.5em 0.0em,
        lightblue,
        #000
    );
    animation:
        ballBounce var(--bounceSpeed) infinite ease-out,
        sceneRotate var(--rotateSpeed) infinite linear reverse;

    @keyframes ballBounce {
        0%, 100% { bottom: 0.5em; }
        50% { bottom: 3em; animation-timing-function: ease-in; }
    }
}

.ball-shadow {
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(#0007, #0000 50%);
    transition: .5s ease-out;
    animation: ballShadow var(--bounceSpeed) infinite ease-in-out;

    @keyframes ballShadow {
        0%, 6.5%, 93.5%, 100% { transform: scale(1); opacity: 1; }
        50% { transform: scale(2); opacity: .5; animation-timing-function: ease-in; }
    }
}

.cube {
    width: 2em;
    height: 2em;
    position: absolute;
    bottom: -1em;
    left: -1em;
    transform-style: preserve-3d;
    transition: .5s ease-out;
    animation:
        cubeHeight var(--bounceSpeed) infinite linear;

        @keyframes cubeHeight {
            0%, 100% { height: 1.5em; }
            6.5%, 93.5% { height: 2em; }
    }

    .left, .right, .front, .back {
        position: absolute;
        width: 100%;
        height: 100%;
        background: var(--boxColor);
        box-shadow: 0 0 .5em #000a inset;
    }

    .front { transform: translateZ(1em); transform-style: preserve-3d; }
    .right { transform: rotateY(90deg) translateZ(1em); }
    .left { transform: rotateY(-90deg) translateZ(1em); }
    .back { transform: rotateY(180deg) translateZ(1em); }

    .top {
        position: absolute;
        width: 2em;
        height: 2em;
        background: var(--boxColor);
        transform: translateY(-50%) rotateX(90deg);
        box-shadow: 0 0 .5em #000a inset;
    }

    .bottom {
        position: absolute;
        width: 2em;
        height: 2em;
        background: #0007;
        bottom: 0;
        transform: translateY(50%) rotateX(90deg);
        box-shadow: 0 0 .5em 0.3em #0007;
    }
}

.floor {
    width: 15em;
    height: 15em;
    background-image:
        radial-gradient(#0000, #000 75%),
        repeating-conic-gradient(
            from 45deg, 
            #333 0deg 90deg, 
            #444 90deg 180deg);
    background-size: 100%, 1em 1em;
    position: absolute;
    top: 1em;
    opacity: .9;
    transition: .5s ease-out;
    transform: 
        translate(-50%, -50%)
        rotateX(90deg);
}

.buttons {
    position: absolute;
    bottom: 0.6em;
    left: -2em;
    transform-style: preserve-3d;
    transform: translateZ(-1em);
}

.rotation {
    left: unset;
    right: -2em;
}

.buttons > p {
    font-size: .25em;
    color: #0ffa;
    text-align: center;
    text-transform: uppercase;
    text-shadow: 0 0 .5em aqua;
    margin-bottom: 0.7em;
}

.buttons > .button {
    display: block;
    cursor: pointer;
    margin-bottom: .7em;
    background: transparent;
    text-transform: uppercase;
    color: #0ff;
    width: 7em;
    height: 2.5em;
    border-radius: .4em;
    cursor: inherit;
    outline: 0;
    border: none;
    font-size: .2em;
    background-color: #0ff3;
    box-shadow: 0 0 .5em aqua inset;
    transition: transform .5s;
}

.disabled {
    opacity: .3;
}

.buttons > .button:hover {
    transform: translateZ(0.6em);
    cursor: pointer;
    text-shadow: 0 0 .5em aqua;
    background: #0ff4;
    color: #5ff;
    transition: transform .5s;
}

.annotation {
    font-size: 14px;
    background: transparent;
    color: #0ff5;
    top: unset;
    bottom: 20px;

    p::before {
        content: 'â€¢';
        margin-right: 10px;
    }

    p > span, p::before {
        color: #0ffa;
        text-shadow: 0 0 .5em aqua;
    }
}